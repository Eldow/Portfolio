{
  "menu": {
    "brand": {
      "label": "My Portfolio"
    },
    "home": {
      "label": "Home",
      "icon": "fa fa-home"
    },
    "resume": {
      "label": "Resume",
      "icon": "fa fa-user"
    },
    "projects": {
      "label": "Achievements",
      "icon": "fa fa-gears"
    },
    "contact": {
      "label": "Contact",
      "icon": "fa fa-comment"
    },
    "linkedin": "https://ca.linkedin.com/in/francois-decan-0a2832b3",
    "github": "https://github.com/Eldow"
  },
  "home": {
    "title": "Home",
    "subtitle": "Welcome on my portfolio, you will find here informations about my career and my last achievements.",
    "line1": "Passionate about new technologies and video games, I like to develop applications during my spare time.",
    "currentProject": "Click here to view my current project.",
    "currentProjectLink": "#spqr"
  },
  "resume": {
    "title": "Resume",
    "subtitle": "Software developer",
    "download": "Download my resume",
    "link": "cv-fdecan-en.pdf",
    "info": {
      "title": "Personal Informations",
      "birthdate": {
        "key": "Birthdate",
        "value": "11/05/1994"
      },
      "mail": {
        "key": "E-mail",
        "value": "fdecan.pro@gmail.com"
      },
      "address": {
        "key": "Address",
        "value": "Chicoutimi, QC, CANADA"
      }
    },
    "pro": {
      "title": "Professional experience",
      "works": [
        {
          "brand": "KAPIA",
          "label": "Kapia Solutions",
          "localisation": "Lille, Nord, France",
          "period": "May-July 2016",
          "missions": [
            "• Development of an AngularJS app communicating with an Oracle database through a java Webservice.",
            "• Management of the git workflow.",
            "• Maintenance of a NodeJS tool to automate deployments",
            "• Usage of the SCRUM method."
          ]
        }
      ]
    },
    "education": {
      "title": "Scholarship",
      "schools" : [
      {
        "brand": "UQAC",
        "label": "Université du Québec à Chicoutimi",
        "logo": "uqac-logo.png",
        "localisation": "Chicoutimi, QC, Canada",
        "period": "2016 - 2017",
        "description": "Second year of master in computer science, focused on video games. (In pair with ISEN)"
      },
      {
        "brand": "ISEN",
        "label": "Institut Supérieur de l'Électronique et du Numérique de Lille",
        "localisation": "Lille, Nord, France",
        "logo": "isen-logo.png",
        "period": "2015 - 2016",
        "description": "First year of Software development and Big Data."
      },
      {
        "brand": "ISEN",
        "label": "Institut Supérieur de l'Électronique et du Numérique de Lille",
        "localisation": "Lille, Nord, France",
        "logo": "isen-logo.png",
        "period": "2011 - 2015",
        "description": "Bachelor of Technology - three years of study in mathematics, physics and IT."
      },
      {
        "label": "Lycée Guillaume Budé",
        "localisation": "Limeil-Brévannes, Ile-de-France, France",
        "period": "2009 - 2011",
        "description": "High School diploma passed with distinctions."
      }
     ]
    },
    "skills": {
      "title": "Skills",
      "language": "Languages",
      "technology": "IT",
      "languages": [
        {
          "name": "French",
          "rating": 5
        },
        {
          "name": "English",
          "rating": 4
        },
        {
          "name": "German",
          "rating": 2
        },
        {
          "name": "Spanish",
          "rating": 1
        }
      ],
      "technologies": [
        {
          "category": "Software",
          "list": ["C++", "C#", "Java"]
        },
        {
          "category": "Scripting",
          "list": ["Python", "Bash"]
        },
        {
          "category": "Web",
          "list": ["Html", "Css", "Javascript", "NodeJS", "ExpressJS", "AngularJS"]
        },
        {
          "category": "Database",
          "list": ["PostgreSQL", "MongoDB"]
        },
        {
          "category": "Versioning",
          "list": ["Git", "SVN"]
        },
        {
          "category": "IDE",
          "list": ["Netbeans", "VisualStudio", "AndroidStudio", "Eclipse", "Atom", "Webstorm"]
        },
        {
          "category": "Game Engines",
          "list": ["UnityEngine"]
        },
        {
          "category": "Others",
          "list": ["Adobe Suite", "Office Suite", "OpenGL", "JIRA"]
        }
      ]
    },
    "achievements": {
      "title": "Last achievements"
    },
    "hobbies": {
      "title": "Hobbies",
      "list": [
        {
          "name": "Clarinet",
          "picture": "clarinet.png"
        },
        {
          "name": "Piano",
          "picture": "piano.png"
        },
        {
          "name": "Ping-pong",
          "picture": "ping-pong.png"
        }
      ]
    }
  },
  "projects" : {
    "title": "Last achievements",
    "subtitle": "Here is a list of my last achievements.",
    "objective": "Objective",
    "how": "How does it work ? ",
    "start_date": "Start Date",
    "caracteristics": "Caracteristics",
    "languages": "Technologies",
    "git": "View on GitHub",
    "list":
    [
      {
        "icon": "fa fa-magnet",
        "title": "Lambda Engine",
        "subtitle": "A Javascript Game Engine.",
        "link": "#lambda-engine",
        "gitUrl": "https://github.com/Eldow/LambdaEngine",
        "picture": "lambda-engine-1.PNG",
        "picture2": "lambda-engine-2.PNG",
        "tags": ["html", "css", "js"],
        "period": "October 2016",
        "line1": "LambdaEngine is a simple game engine written in Javascript, it implements a simple game loop to refresh the display to a fixed framerate (default 60FPS).",
        "line2": "Several collision boxes have been developed: circles, points, AABBs, OBBs and K-DOPs. Detection of collision between each of these classes is done in a customized manner using several algorithms, for example the Separate Axis Theorem (SAT).",
        "line3": "Shapes are loaded from a JSON file containing their description. The application was made responsive using ratios to recalculate coordinates for smaller screen resolutions.",
        "line4": "The Jasmine javascript library was used to perform unit tests to verify the correct functioning of the code.",
        "order": 8
      },
      {
        "icon": "fa fa-sun-o",
        "title": "Eclipse",
        "subtitle": "A Puzzle / Platform video game altering the player's perception using shadow and light effects. Made with Unity.",
        "link": "#eclipse",
        "gitUrl": "https://github.com/Eldow/Eclipse",
        "picture": "eclipse-1.png",
        "tags": ["c#", "unity"],
        "period": "October - December 2016",
        "line1": "Eclipse is a game set in the 1920s, our hero, Professor Fitzgerald, undergoes a curse and can no longer move under the light.",
        "line2": "This mechanics allows us to create situations of inventive gameplay where the player will have to use tricks to advance and solve the puzzles.",
        "line3": "Many objects and characters have been implemented: boxes, snakes, scarabs, sarcophagi, mummies or a boss, as many entities with which the player can interact.",
        "line4": "In addition to programming, this project has also allowed me to work in other areas of game development such as animation management or the creation of a soundtrack and special effects.",
        "order": 9
      },
      {
        "icon": "fa fa-chrome",
        "title": "JChrome",
        "subtitle": "A Java implementation of a Web browser using Rhino and JSoup.",
        "link": "#jchrome",
        "picture": "jchrome-logo.jpg",
        "tags": ["java"],
        "period": "March - June 2014",
        "line1": "This project allowed me to form an idea of ​​the general functioning of a web browser. My team and I have programmed a browser with many features that can be found in modern browsers but with the constraints of using open-source libraries such as Rhino and JSoup.",
        "line2": "Rhino is a javascript engine created by the company Mozilla, it allowed us to create our own developer console.",
        "line3": "JSoup allowed us to cross the Document Object Model of a web page in order to restore the content in a Java layout.",
        "line4": "In addition to the simple rendering of a web page, we have implemented additional features such as the management of favorites and history.",
        "order": 2
      },
      {
        "icon": "fa fa-home",
        "title": "The Village",
        "subtitle": "An Android application of an alternative to Mafia game. It is connected with a MongoDB database through a REST WebService and has an online chat Socket.IO.",
        "link": "#the-village",
        "picture": "the-village-1.jpg",
        "tags": ["java", "android", "node", "express", "mongo"],
        "period": "May - December 2016",
        "line1": "This application allows to play online on mobile to the game of the werewolf, alternative to the game Mafia. It is a turn-based game based on communication and bluffing.",
        "line2": "Werewolves have invaded your village, the villagers aim to get rid of this threat while the werewolf players have to eliminate the entire population. A game takes place in two phases, day and night. The day, the villagers vote to eliminate one of their compatriots supposed werewolf, and at night, wolves choose a victim.",
        "line3": "Special roles add spice to the action: The teacher, for example, can remove a player's right to vote. There are dozens of them.",
        "line4": "The project is divided into two parts. An Android client and a NodeJS server itself serving two roles: that of a WebService REST in order to communicate game information to the clients, and that of a Socket.IO server allowing to chat in real time with its team members.",
        "order": 7
      },
      {
        "icon": "fa fa-music",
        "title": "P.E.Z Audio Player",
        "subtitle": "A connected music app for Android 5.0+.",
        "link": "#pez-audio-player",
        "picture": "pez-audio-player-pub.jpg",
        "picture2": "pez-audio-player-3.PNG",
        "tags": ["java", "android"],
        "period": "October - November 2015",
        "line1": "P.E.Z Audio Player is a mobile music library application that has, in addition to all the basic features of a music player, automatic retrieval functions for missing metadata on your music.",
        "line2": "The application includes a file manager, an artist, album and song library and a playback queue.",
        "line3": "The playback queue allows you to change the listening order of the music with a simple drag and drop.",
        "line4": "The main point of this project is the optimization of the management of large volumes of music, which is essential for mobile, if you want to save battery and data and have Correct answers.",
        "line5": "To do this, we used RecyclerView to load only what is displayed on the screen and used the cache and file system of the phone to not reload the images each time.",
        "order": 4
      },
      {
        "icon": "fa fa-film",
        "title": "Constellation Series",
        "subtitle": "An AngularJS application allowing to keep the thread of its series followed, connected with a solution domotique through a server in C #.",
        "link": "#constellation-series",
        "picture": "constellation-series-2.PNG",
        "picture2": "constellation-series-1.PNG",
        "tags": ["c#", "js", "angular"],
        "period": "March 2016",
        "line1": "Constellation Series is a web application AngularJS linked to a backend in C # communicating with an API, OmdB, allowing to keep track of its series followed.",
        "line2": "It has the particularity of being connected to a home automation system, Constellation, whose role is to centralize the data of the whole house on a central server.",
        "order": 5
      },
      {
        "icon": "fa fa-map",
        "title": "TSP Solver",
        "subtitle": "An application communicating with a server in C ++ across a Websocket and calculating the shortest path between locations using the Little algorithm.",
        "link": "#tsp-solver",
        "picture": "tsp-solver-2.jpg",
        "picture2": "tsp-solver-1.PNG",
        "tags": ["c++", "js"],
        "period": "February - June 2013",
        "line1": "The application consists of a JavaScript client using RequireJS as well as a C ++ server implementing the Little algorithm.",
        "line2": "The client is linked to the Google Map API to obtain the cost matrix for various locations on the map. This data is stored via LocalStorage to avoid recalculating for known point sets.",
        "line3": "The client-server connection is made using Websocket technology, allowing you to connect to a port and then send and receive messages.",
        "line3": "The overall operation is as follows: placement of the points on google maps, generation of the matrix, sending of the latter to the server which will realize the algorithm of Little and return an array of points forming the shortest path.",
        "order": 1
      },
      {
        "icon": "fa fa-users",
        "title": "Hire",
        "subtitle": "A MEAN application (Mongo Express Angular Node) designed to facilitate the work of the human relationship service of a company.",
        "link": "#hire",
        "picture": "hire-1.PNG",
        "picture2": "hire-2.PNG",
        "tags": ["mongo", "express", "angular", "node"],
        "period": "April 2016",
        "line1": "The Hire platform was built using the MEAN.js framework, in combination with its Yeoman generators. The automatic generation of templates has saved us a lot of time.",
        "line2": "The application consists of an AngularJS client and a NodeJS / Express server acting as REST webservice to communicate with the MongoDB database.",
        "line3": "The Mongoose module allows us to communicate with a MongoDB database and create our documents without any prior configuration.",
        "line3": "This project allowed me to familiarize myself with REST services and http requests.",
        "order": 6
      },
      {
        "icon": "fa fa-university",
        "title": "Dynasty",
        "subtitle": "A real-time strategy game realized in C #.",
        "link": "#dynasty",
        "picture": "dynasty-1.png",
        "picture2": "dynasty-2.png",
        "tags": ["c#"],
        "period": "July 2015",
        "line1": "Dynasty is a real-time strategy game realized in C #.",
        "line2": "It is made up of a tile-shaped playing board allowing several types of actions: construction of buildings, display of units.",
        "line3": "By clicking on a building or overflying an entity, a description is provided to locate the player historically. Actions are also proposed to improve his city and expand his army.",
        "line3": "The goal is to defeat assaults of a growing difficulty until reaching the maximum threshold of development, where a boss will be sent, ending the game session.",
        "order": 3
      },
      {
        "icon": "fa fa-rocket",
        "title": "S.P.Q.R",
        "gitUrl": "https://github.com/Eldow/SPQR",
        "subtitle": "An online fighting game realized with Unity and Photon.",
        "link": "#spqr",
        "picture": "spqr-1.JPG",
        "tags": ["c#", "unity", "photon"],
        "period": "January - April 2017",
        "line1": "Super Powerful Quantum Robots is a 3D fighting game featuring ideas from both combat games and racing games.",
        "line2": "The characters are rolling robots using a sphere, using energy to move and fight.",
        "line3": "When they no longer have energy, they can no longer fight for a short period of time.",
        "line3": "The goal is to create a competitive and balanced game. It will be possible to train against an artificial intelligence learning of the battles of the player in order to always be able to face stronger than himself.",
        "order": 10
      }
    ]
  },
  "contact": {
    "title": "Contact",
    "subtitle": "Any questions ? Send me a message !",
    "object": "Subject",
    "content": "Content",
    "send": "Send",
    "info": "You can contact me on LinkedIn, by mail or using the form below.",
    "success" : "Your message has been sent.",
    "error": "An error has occured, the service may be unavailable in your country."
  }
}
